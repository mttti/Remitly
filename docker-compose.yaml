services:
  api:
    build: .
    container_name: swift_api
    ports:
      - "8080:8080"
    depends_on:
      - db
    volumes:
      - .:/app
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      NODE_ENV: ${NODE_ENV}
    command: npm run start
  db:
    image: postgres:17
    container_name: swift_postgres
    ports:
      - "5432:5432"
    restart: "no"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data

  test_db:
    image: postgres:17
    container_name: swift_postgres_test
    ports:
      - "5433:5432"
    restart: "no"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres_test
      DB_PORT: 5432
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - postgres_test_data:/var/lib/postgresql/data
    profiles:
      - test

  integration_tests:
    build: .
    depends_on:
      - api
      - test_db
    volumes:
      - .:/app
    environment:
      DB_USER: postgres
      DB_PASSWORD: mysecretpassword
      DB_HOST: test_db
      DB_PORT: 5432
      DB_DATABASE: postgres_test
      NODE_ENV: test
    command: npm run test
    profiles:
      - test
volumes:
  postgres_data:
  postgres_test_data:
